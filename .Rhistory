install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
remove.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
table_result <- table(factor(crash_data$DRINKING_D, levels = c(0, 1), labels = c("No Alcohol Involved", "Alcohol Involved")))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
crash_data <- read_csv("Logistic Regression Data.csv")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
#library(ggthemr)
library(ggpubr)
library(ggrepel)
library(purrr)
library(kableExtra)
library(caret)
library(corrplot)
library(prediction)
options(scipen = 999) # turn off scientific notation
library(aod)
#library(rms)
library(gmodels)
library(ROCR)
library(crosstable)
install.packages("crosstable")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
#library(ggthemr)
library(ggpubr)
library(ggrepel)
library(purrr)
library(kableExtra)
library(caret)
library(corrplot)
library(prediction)
options(scipen = 999) # turn off scientific notation
library(aod)
#library(rms)
library(gmodels)
library(ROCR)
library(crosstable)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
#library(ggthemr)
library(ggpubr)
library(ggrepel)
library(purrr)
library(kableExtra)
library(caret)
library(corrplot)
library(prediction)
options(scipen = 999) # turn off scientific notation
library(aod)
#library(rms)
library(gmodels)
library(ROCR)
library(crosstable)
install.packages("crosstable")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
#library(ggthemr)
library(ggpubr)
library(ggrepel)
library(purrr)
library(kableExtra)
library(caret)
library(corrplot)
library(prediction)
options(scipen = 999) # turn off scientific notation
library(aod)
#library(rms)
library(gmodels)
library(ROCR)
library(crosstable)
crash_data <- read_csv("Logistic Regression Data.csv")
table_result <- table(factor(crash_data$DRINKING_D, levels = c(0, 1), labels = c("No Alcohol Involved", "Alcohol Involved")))
result_df <- as.data.frame(table_result)
result_df$Proportion <- prop.table(table_result)
colnames(result_df) <- c("Alcoho-related", "Count", "Proportion")
#print(result_df)
kable(result_df)
crash_data <- read_csv("Logistic Regression Data.csv")
table_result <- table(factor(crash_data$DRINKING_D, levels = c(0, 1), labels = c("No Alcohol Involved", "Alcohol Involved")))
result_df <- as.data.frame(table_result)
result_df$Proportion <- prop.table(table_result)
colnames(result_df) <- c("Alcoho-related", "Count", "Proportion")
#print(result_df)
kable(result_df)
variables <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS")
create_and_print_table <- function(variable) {
crosstable(crash_data, !!as.name(variable), by = "DRINKING_D", funs = "mean", test = TRUE) %>%
as_flextable()
}
tables <- map(variables, create_and_print_table)
variables <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS")
create_and_print_table <- function(variable) {
crosstable(crash_data, !!as.name(variable), by = "DRINKING_D", funs = "mean", test = TRUE)
#%>%
# as_flextable()
}
tables <- map(variables, create_and_print_table)
install.packages("crosstable")
library(crosstable)
binary_predictors <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS") # Replace with actual predictor names
# Initialize an empty list to store the tables and p-values
results_list <- list()
# Loop through each binary predictor
for(predictor in binary_predictors) {
# Create the cross-tabulation
cross_tab <- table(data$DRINKING_D, data[[predictor]])
# Perform Chi-Square test
chi_square_test <- chisq.test(cross_tab)
# Create a data frame to hold the results
results_df <- as.data.frame.matrix(cross_tab)
# Add the p-value to the results data frame
results_df <- cbind(results_df, "Chi-Square p-value" = chi_square_test$p.value)
# Add the results to the list
results_list[[predictor]] <- results_df
}
binary_predictors <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS") # Replace with actual predictor names
# Initialize an empty list to store the tables and p-values
results_list <- list()
# Loop through each binary predictor
for(predictor in binary_predictors) {
# Create the cross-tabulation
cross_tab <- table(crash_data$DRINKING_D, data[[predictor]])
# Perform Chi-Square test
chi_square_test <- chisq.test(cross_tab)
# Create a data frame to hold the results
results_df <- as.data.frame.matrix(cross_tab)
# Add the p-value to the results data frame
results_df <- cbind(results_df, "Chi-Square p-value" = chi_square_test$p.value)
# Add the results to the list
results_list[[predictor]] <- results_df
}
binary_predictors <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS") # Replace with actual predictor names
# Initialize an empty list to store the tables and p-values
results_list <- list()
# Loop through each binary predictor
for(predictor in binary_predictors) {
# Create the cross-tabulation
cross_tab <- table(crash_data$DRINKING_D, crash_data[[predictor]])
# Perform Chi-Square test
chi_square_test <- chisq.test(cross_tab)
# Create a data frame to hold the results
results_df <- as.data.frame.matrix(cross_tab)
# Add the p-value to the results data frame
results_df <- cbind(results_df, "Chi-Square p-value" = chi_square_test$p.value)
# Add the results to the list
results_list[[predictor]] <- results_df
}
# To print the results for each predictor
for(predictor in binary_predictors) {
cat("\nCross-tabulation and Chi-Square test for", predictor, ":\n")
print(results_list[[predictor]])
}
binary_predictors <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS") # Replace with actual predictor names
# Initialize an empty list to store the tables and p-values
results_list <- list()
# Loop through each binary predictor
for(predictor in binary_predictors) {
# Create the cross-tabulation
cross_tab <- table(crash_data$DRINKING_D, crash_data[[predictor]])
# Perform Chi-Square test
chi_square_test <- chisq.test(cross_tab)
# Create a data frame to hold the results
results_df <- as.data.frame.matrix(cross_tab)
# Add the p-value to the results data frame
results_df <- cbind(results_df, "Chi-Square p-value" = chi_square_test$p.value)
# Add the results to the list
results_list[[predictor]] <- results_df
}
# To print the results for each predictor
for(predictor in binary_predictors) {
cat("\nCross-tabulation and Chi-Square test for", predictor, ":\n")
kable(results_list[[predictor]])
}
results_list
variables <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS")
combined_results <- data.frame()
# Loop through each binary predictor
for(predictor in variables) {
cross_tab <- table(crash_data$DRINKING_D, crash_data[[predictor]])
chi_square_test <- chisq.test(cross_tab)
results_df <- as.data.frame.matrix(cross_tab)
# Add the p-value as a new row
p_value_row <- data.frame(`Chi-Square p-value` = chi_square_test$p.value)
rownames(p_value_row) <- "Chi-Square p-value"
# Combine the cross-tabulation with the p-value row
results_df <- rbind(results_df, p_value_row)
# Add a new column for the predictor name
results_df$Predictor <- rep(predictor, nrow(results_df))
# Combine the results with the previous ones
combined_results <- rbind(combined_results, results_df)
}
variables <- c("FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS")
combined_results <- data.frame()
# Loop through each binary predictor
for(predictor in variables) {
cross_tab <- table(crash_data$DRINKING_D, crash_data[[predictor]])
chi_square_test <- chisq.test(cross_tab)
results_df <- as.data.frame.matrix(cross_tab)
# Create a one-row data frame for the p-value
p_value_df <- data.frame(matrix(ncol = ncol(results_df), nrow = 1))
colnames(p_value_df) <- colnames(results_df)
p_value_df[1,] <- chi_square_test$p.value
# Combine the cross-tabulation with the p-value row
combined_df <- rbind(results_df, p_value_df)
# Add a new column for the predictor name
combined_df$Predictor <- c(rep(predictor, nrow(results_df)), "Chi-Square p-value")
# Combine the results with the previous ones
combined_results <- rbind(combined_results, combined_df)
}
transposed_results <- t(combined_results)
kable(transposed_results, format = "html", caption = "Cross-Tabulation and Chi-Square Results")
cross_tab <- table(crash_data$DRINKING_D, crash_data[[predictor]])
chi_square_test <- chisq.test(cross_tab)
results_df <- as.data.frame.matrix(cross_tab)
results_df
kable(results_df)
kable(results_df)
kableExtra(results_df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
#library(ggthemr)
library(ggpubr)
library(ggrepel)
library(purrr)
library(kableExtra)
library(caret)
library(corrplot)
library(prediction)
options(scipen = 999) # turn off scientific notation
library(aod)
#library(rms)
library(gmodels)
library(ROCR)
library(kableExtra)
#library(crosstable)
library(flextable)
library(ggplot2)
library(readr)
kableExtra(results_df)
library(kableExtra)
kableExtra(results_df)
