"0","cut_off_values <- c(0.02, 0.03, 0.05, 0.07, 0.08, 0.09, 0.1, 0.15, 0.2, 0.5)"
"0",""
"0","result_df <- data.frame("
"0","  Cut_off_Value = cut_off_values,"
"0","  Sensitivity = numeric(length(cut_off_values)),"
"0","  Specificity = numeric(length(cut_off_values)),"
"0","  Misclassification_Rate = numeric(length(cut_off_values))"
"0",")"
"0",""
"0","fit <- predict(logistic, type = ""response"")"
"0",""
"0","# Loop through each cut-off value and calculate metrics"
"0","for (i in seq_along(cut_off_values)) {"
"0","  fit.binary <- as.integer(fit >= cut_off_values[i])"
"0","  table_result <- table(fit.binary, crash_data$DRINKING_D)"
"0","  "
"0","  # Check if both classes are present in the data"
"0","  if (sum(table_result[1, ]) > 0 && sum(table_result[2, ]) > 0) {"
"0","    sensitivity <- table_result[2, 2] / sum(table_result[2, ])"
"0","    specificity <- table_result[1, 1] / sum(table_result[1, ])"
"0","    misclassification_rate <- sum(table_result[1, 2], table_result[2, 1]) / sum(table_result)"
"0","    result_df[i, c(""Sensitivity"", ""Specificity"", ""Misclassification_Rate"")] <- c(sensitivity, specificity, misclassification_rate)"
"0","  } else {"
"0","    warning(paste(""One or both classes missing for cut-off value:"", cut_off_values[i]))"
"0","  }"
"0","}"
"0",""
"0",""
"0","result_df %>%"
"0","  kbl(caption = ""Summary Table of Means, Standard Deviations, and T-Test Results"") %>%"
"0","    kable_styling() %>%"
"0","    kable_classic(html_font = ""Cambria"", position = ""left"", full_width = F)"
